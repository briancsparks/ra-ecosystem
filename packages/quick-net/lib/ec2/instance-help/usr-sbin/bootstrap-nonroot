#!/bin/bash -ex

test -f ${HOME}/bootstrap-nonroot-run && exit 0

cmd-from-s3 "s3://${NAMESPACE_LC}/quick-net/deploy/${INSTANCE_ID}/boot-shell-commands"

# We like github
ssh-keyscan github.com              >> ~/.ssh/known_hosts
ssh-keyscan github.azc.ext.hp.com   >> ~/.ssh/known_hosts

# Key files
aws s3 cp "s3://${NAMESPACE_LC}/quick-net/deploy/${INSTANCE_ID}/home/.bashrc"       - >> "$HOME/.bashrc"
aws s3 cp "s3://${NAMESPACE_LC}/quick-net/deploy/${INSTANCE_ID}/home/.profile"      - >> "$HOME/.profile"
aws s3 cp "s3://${NAMESPACE_LC}/quick-net/deploy/${INSTANCE_ID}/home/.bash_aliases" - >> "$HOME/.bash_aliases"


# We need VIM
mkdir -p ~/.vim/autoload ~/.vim/bundle && \
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

aws s3 cp "s3://${NAMESPACE_LC}/quick-net/deploy/${INSTANCE_ID}/home/.vimrc"        - >> "$HOME/.vimrc"

git clone https://github.com/chr4/nginx.vim ~/.vim/bundle/nginx.vim

# https://github.com/editor-bootstrap/vim-bootstrap


# Get Node.js modules
mkdir -p run && cd $_

# Run Anywhere
git clone git@github.com:briancsparks/ra-ecosystem
cd ra-ecosystem
git checkout feature/stack

# Webtier -----
if which nginx; then
  # ---- lambda-net
  cd apps/lambda-net
  npm i

  pm2 start server.js

  # Is nginx running?
  if ps aux | egrep -v grep | egrep nginx; then
    sudo nginx -t && sudo nginx -s reload
  else
    sudo nginx -t && sudo nginx
  fi

  tree /etc/nginx

  echo "Nginx processes:"
  ps aux | egrep -v grep | egrep nginx
fi


# FILES="$(aws s3api list-objects --bucket ${NAMESPACE_LC} --prefix quick-net/deploy/${INSTANCE_ID}/home | jq -r '.Contents[].Key')"
# for f in $FILES; do
#   aws s3 cp "s3://${NAMESPACE_LC}/$f" - >> "$HOME"
#   chmod 0755 "/usr/sbin/$1"
# done


# Notes for installing cloud-watch agent
# https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/QuickStartEC2Instance.html
sudo apt-get update
curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O
sudo python ./awslogs-agent-setup.py --region us-east-1

#!/bin/bash
curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O
chmod +x ./awslogs-agent-setup.py
sudo python ./awslogs-agent-setup.py -n -r us-east-1 -c s3://aws-s3-bucket1/my-config-file

# Output
#------------------------------------------------------
#- Configuration file successfully saved at: /var/awslogs/etc/awslogs.conf
#- You can begin accessing new log events after a few moments at https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logs:
#- You can use 'sudo service awslogs start|stop|status|restart' to control the daemon.
#- To see diagnostic information for the CloudWatch Logs Agent, see /var/log/awslogs.log
#- You can rerun interactive setup using 'sudo python ./awslogs-agent-setup.py --region us-east-1 --only-generate-config'
#------------------------------------------------------



echo "true" > ${HOME}/bootstrap-nonroot-run
